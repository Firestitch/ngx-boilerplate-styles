// ""!default"" - guarded assignment. In this case, the constant is only set if it does not already have a value
$color-success: black !default;
$color-warning: #FFA000 !default;
$color-primary: #2196F3 !default;
$color-danger: #E53935 !default;
$color-disabled: #EAEAEA !default;

body, input {
    font-size: 15px;
}

a {
	text-decoration: none;
}

.md-button {

	&:not(.md-mini) {
		padding-left: 10px;
		padding-right: 10px;
	}
}

.md-button.disabled,
.md-button[disabled],
.md-button.disabled:hover,
.md-button[disabled]:hover {
    background: $color-disabled;
    color: #A8A8A8;
    opacity: 1;
}

.md-dialog-container {
    /*position: fixed;*/ //No needed in v1.0.9 anymore
}

md-dialog-actions .md-button.md-button-primary {

	background: transparent;
	box-shadow: none;

	&:active, &:focus, & {
	    background: transparent;
	    color: $color-primary;
	}

	&:hover {
	    background: rgba(158,158,158,0.2);
	    opacity: 1;
	}
}

.md-datepicker-calendar-pane.md-pane-open {
    /*display: none;*/

    .md-datepicker-input-mask {
        display: none;

        .md-datepicker-input-mask-opaque {

        }
    }
}

md-datepicker-container {
    font-size: 15px;
    display: inline-block;
    position: relative;

    padding: 2px 2px 20px;
    margin: 18px 0 0;
    vertical-align: middle;
    min-height: 54px;

    &[flex],
    &[class~="flex"]
    &[class|="flex"] {
        // because flex changes its display from block to flex and its box-sizing from content-box to border-box
        min-height: 76px;
        max-height: 0;
    }

    &.md-block {
        display: block;

        md-datepicker {
            padding-right: 0;
            margin-right: 0;
        }

        .md-datepicker-input-container {
            display: block;
        }

        .md-datepicker-input {
            min-width: 90px;
            max-width: none;
            width: 100%;
        }
    }

    md-datepicker {
        display: block;

        &.md-datepicker-open {
            .md-datepicker-input-container {
                margin-left: 0;
                border-bottom: 1px solid;
                border-bottom-color: rgba(0, 0, 0, 0.11);
            }

            .md-datepicker-input {
                margin-left: 0;
                height: auto;
            }
        }
    }

    .md-datepicker-input-container {
        box-sizing: border-box;
        height: 31px;

    	padding-bottom: 0;
    	margin-left: 0;
        border-bottom-color: rgba(0, 0, 0, 0.11);
    }

    .md-datepicker-input {
        font-size: 15px;
        color: rgba(0,0,0,0.87);
        order: 2;

        padding: 0 2px;

        line-height: 26px;
        height: 30px;

        -ms-flex-preferred-size: 26px;
        outline-offset: 0;

        &:focus {
            outline: none;
        }
        &:invalid {
            outline: none;
            box-shadow: none;
        }
        &.md-no-flex {
            flex: none !important;
        }
    }

    .md-button {

        &:not(.md-mini) {
        }

        &.md-icon-button {

            &.md-datepicker-triangle-button {
                height: 20px;
                width: 20px;
                min-height: 20px;

                padding: 0;
                margin: 14px 8px 0 0;

                &:not(.md-mini) {

                }

                .md-datepicker-expand-triangle {
                    border: none;
                    height: 100%;
                    width: 100%;
                    line-height: 20px;

                    &:after {
                        display: block;
                        content: '\25BC';
                        position: relative;
                        top: -2px;
                        speak: none;
                        transform: scaleY(0.6) scaleX(1);
                        color: rgba(0, 0, 0, 0.87);
                        font-size: 16px;
                    }
                }
            }
        }
    }

    .md-datepicker-button {
    	display: none;
    }
}

md-datepicker-container {

    label {
        line-height: 21px;

		position: absolute;
	    bottom: 100%;
	    left: 0;
	    right: auto;
	    padding-left: 6px;

        transform: translate3d(0, 7px, 0) scale(0.75);
        transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;
        transform-origin: left top;

	    color: rgba(0, 0, 0, 0.54);
        pointer-events: none;

        md-icon,
        md-icon.material-icons {
            vertical-align: text-bottom;
            font-size: 20px;
            height: 20px;
            width: 20px;
        }
    }

    &[class*="ng-"] {

        label {
            order: 1;
            z-index: 1;
            padding-left: 2px;

            transform: translate3d(0, 28px, 0) scale(1);
            transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;

            color: rgba(0, 0, 0, 0.26);
        }
    }
}

md-datepicker-container {
    // ng-not-empty - denotes 'the view contains a non-empty value'
    // ng-empty     - denotes 'the view does not contain a value or the value is deemed "empty", as defined'
    &.md-datepicker-focused,
    &.md-input-has-placeholder,
    &.ng-invalid-valid-add,
    &.ng-not-empty-add,
    &.ng-not-empty,
    &.ng-empty.ng-invalid-valid {

        label {
            padding-left: 4px;
            margin-top: 0;
            transform: translate3d(0, 7px, 0) scale(0.75);
        }
    }

    // If we have an existing value; don't animate the transform as it happens on page load and
    // causes erratic/unnecessary animation
    &.ng-not-empty {

        label {
            color: rgba(0, 0, 0, 0.54);
            transition: none;
        }

        &.md-datepicker-open {

            label {
                color: rgba(0, 0, 0, 0.26);
                transform: translate3d(0, 28px, 0) scale(1);
                transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;
                transform-origin: left top;
            }
        }
    }

    &.md-datepicker-focused {

        &.ng-empty {
            label {
                color: #106CC8;

                md-icon.material-icons {
                    color: #106CC8;
                }
            }

            &.ng-invalid {
                /*&:not(.ng-untouched),*/
                &.ng-touched,
                &.ng-invalid-valid  {
                    label {
                        color: rgb(221, 44, 0);

                        md-icon.material-icons {
                            color: rgba(0, 0, 0, 0.54);
                        }
                    }
                }
            }
        }

        &.ng-not-empty.ng-invalid {
            label {
                color: rgb(221, 44, 0);
            }
        }
    }
}

fs-heading {
    color: #272727;
    font-size: 20px;
    height: 36px;
    display: block;
    vertical-align: middle;
    position: relative;
    line-height: 36px;
    margin-bottom: 10px;
}

fs-heading fs-heading-actions {
    position: absolute;
    right: 0;
}

fs-heading fs-heading-actions .md-button {
    margin: 0;
}

md-dialog {
	max-width: 1100px;
}

hr {
    border: 1px solid #D0D0D0;
    border-bottom: 0;
}

md-input-container {
    box-sizing: content-box;
    margin: 18px 0 0;
    padding: 2px 2px 20px;
    min-height: 54px;
    vertical-align: middle;

    &[flex],
    &[class~="flex"]
    &[class|="flex"] {
        // because flex changes its display from block to flex and its box-sizing from content-box to border-box
        min-height: 76px;
    }

    // icon offset should have higher priority as normal label
    &.md-has-icon {
        padding-left: 2px;

        > label {
            left: 0px;
        }
    }

    &.md-icon-float {

    }

    &.md-icon-left {
        padding-left: 28px;
        padding-right: 2px;

        > label {
            left: 27px;
        }
    }

    &.md-icon-right {
        padding-left: 2px;
    }

    > md-icon {
        color: rgba(0,0,0,0.57);
    }

    textarea.md-input {
        font-size: 16px;
        line-height: 20px;
        padding-top: 4px;
        height: 30px;
        min-height: 30px;
    }

    /*
     * The .md-input class is added to the input/textarea
     */
    .md-input {
        margin-top: 1px;
        line-height: 26px;
        height: 30px;
        -ms-flex-preferred-size: 26px;
        padding-top: 0px;
        padding-bottom: 1px;

        &:focus {
        }

        &:invalid {
        }

        &.md-no-flex {
        }
    }

    .md-input[disabled],
    [disabled] & .md-input {
       margin-top: 2px;
    }

    label, .md-placeholder {
        color: rgba(0, 0, 0, 0.26);
    }

    label {
        line-height: 21px;

        md-icon,
        md-icon.material-icons {
            vertical-align: text-bottom;
            font-size: 20px;
            height: 20px;
            width: 20px;
        }

        padding-left: 2px;

        &:not(.md-no-float) {
        }

        &:not(.md-container-ignore) {
        }

        &:not(.md-no-float):not(.md-container-ignore) {
            padding-left: 2px;
        }
    }

    .md-placeholder {
    }


    &.md-input-focused,
    &.md-input-has-value,
    &.md-input-has-placeholder{
        label, label:not(.md-no-float):not(.md-container-ignore) {
            padding-left: 4px;
            margin-top: 0;
            transform: translate3d(0, 7px, 0) scale(0.75);
        }
    }


    &:not(.md-input-invalid) {

        &.md-input-has-value {
            label,
            md-icon {
                color: rgba(0, 0, 0, 0.54);
            }
        }

        &.md-input-focused {
            label,
            md-icon,
            &.md-accent label,
            &.md-warn label {

            }
        }
    }


    &.md-input-invalid {
        label,
        &.md-input-focused label {

        }
    }

    .md-errors-spacer {
        min-height: 23px;
    }

    .md-char-counter {
        font-size: 12px;
        line-height: 14px;
        padding-top: 5px;
    }

    ng-messages .md-char-counter,
    [ng-messages] .md-char-counter,
    ng-message .md-char-counter,
    data-ng-message .md-char-counter,
    x-ng-message .md-char-counter,
    [ng-message] .md-char-counter,
    [data-ng-message] .md-char-counter,
    [x-ng-message] .md-char-counter,
    [ng-message-exp] .md-char-counter,
    [data-ng-message-exp] .md-char-counter,
    [x-ng-message-exp] .md-char-counter {
        font-size: 12px;
        line-height: 14px;
        padding-top: 5px;
    }


    input, md-select, textarea {
        color: rgba(0, 0, 0, 0.87);
    }

    md-select {
        min-width: 80px;

        &:not([disabled]):focus {
            .md-select-value {
                padding-bottom: 1px;

                &.md-select-placeholder {
                    color: rgba(0,0,0,0.87);
                }
            }
        }

        .md-select-value {
            padding-top: 2px;
            padding-bottom: 2px;

            > * {
                margin-bottom: 4px;
            }

            &.md-select-placeholder {

            }

            .md-select-icon {
                width: 15px;
                margin-top: 1px;
                margin-right: 0;
                margin-bottom: 4px;
                color: rgba(0, 0, 0, 0.87);

                &:after {
                    font-size: 16px;
                }
            }

            .md-container {
                display: inline;

                .md-icon {
                    display: inline;
                }
            }
        }
    }
}

md-input-container,
md-radiobutton-container,
md-checkbox-container,
md-datepicker-container {

    .hint {
        color: rgba(0, 0, 0, 0.87);
        font-size: 12px;
        line-height: 14px;

        padding-left: 2px;
        padding-top: 5px;

        position: relative;
        overflow: hidden;
    }

    ng-messages,
    [ng-messages] {
        position: relative;
        display: block;

        color: rgb(221, 44, 0);
        font-size: 12px;
        line-height: 14px;

        padding-left: 2px;
        padding-top: 0;
    }

    ng-message,
    data-ng-message,
    x-ng-message,
    [ng-message],
    [data-ng-message],
    [x-ng-message],
    [ng-message-exp],
    [data-ng-message-exp],
    [x-ng-message-exp] {
        display: block;
        font-size: 12px;
        line-height: 14px;
        padding-top: 5px;
    }

    form[fs-validate] & {
        ng-messages {
            position: relative;

            /*ng-message {
                font-size: 12px;
                line-height: 14px;
                padding-top: 5px;
            }*/
        }
    }

    &.md-input-invalid {
        .hint {
            display: none;
        }
    }

    & {
        md-datepicker.ng-invalid.ng-touched ~ .hint {
            display: none;
        }
    }
}

md-radiobutton-container,
md-checkbox-container {

    ng-message,
    data-ng-message,
    x-ng-message,
    [ng-message],
    [data-ng-message],
    [x-ng-message],
    [ng-message-exp],
    [data-ng-message-exp],
    [x-ng-message-exp] {
        padding-top: 6px;
    }

    &.ng-invalid {
        .hint {
            display: none;
        }
    }

    form[fs-validate] & {
        ng-message,
        data-ng-message,
        x-ng-message,
        [ng-message],
        [data-ng-message],
        [x-ng-message],
        [ng-message-exp],
        [data-ng-message-exp],
        [x-ng-message-exp] {
            padding-top: 6px;
        }
    }
}

md-autocomplete-container {
    md-autocomplete-wrap {
        border-bottom: 1px solid rgb(225, 225, 225);
        box-shadow: none !important;
    }

    input {
        padding: 0 4px !important;
    }
}


.md-open-menu-container,
.md-select-menu-container {
    transition-duration: 0ms !important;
}

.md-open-menu-container > md-menu-content > *,
.md-select-menu-container md-select-menu > * {
    transition-duration: 10ms !important;
    transition-delay: 5ms !important;
}

md-toast {
    position: fixed;
}

md-checkbox-container,
md-radiobutton-container,
md-input-container,
md-datepicker-container {

    &.md-no-label {
        margin-top: 0;

        &.md-input-has-value label,
        &.md-input-focused label {
            display: none;
        }
    }

    &.md-no-message,
    &.md-no-hints-errors {
        min-height: 0;
        margin-bottom: 0;
        padding-bottom: 2px;

        .md-errors-spacer, .hint {
            display: none;
        }

        .md-select-value {
            box-sizing: border-box;
            min-height: 31px;
        }
    }
}

md-select-menu {

    md-option,
    md-option.md-primary {
        color: rgba(0, 0, 0, 0.87);

        &[selected] {
            color: rgba(0, 0, 0, 0.87);

            &:focus {
                color: rgba(0, 0, 0, 0.87);
            }
        }

        &[disabled] {
            color: rgba(0, 0, 0, 0.26);

            &:focus {
                color: rgba(0, 0, 0, 0.26);
            }
        }
    }
}

.md-checkbox-enabled[selected] .md-icon:after {
    border-color: rgba(255,255,255,0.87);
}

md-autocomplete[md-floating-label] {
    md-input-container {
        min-height: inherit;
        padding-bottom: 2px;
        margin: 18px 0;
    }
}

md-checkbox-container,
md-radiobutton-container {
    font-size: 15px;
    display: inline-block;
    position: relative;

    padding: 2px 2px 20px;
    margin: 18px 0 0;
    vertical-align: middle;
    min-height: 54px;

    &.md-block {
        display: block;
    }

    label {
        line-height: 21px;

		position: absolute;
	    bottom: 100%;
	    left: 0;
	    right: auto;
	    padding-left: 6px;

        transform: translate3d(0, 7px, 0) scale(0.75);
        transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;
        transform-origin: left top;

	    color: rgba(0, 0, 0, 0.54);
        pointer-events: none;

        md-icon,
        md-icon.material-icons {
            vertical-align: text-bottom;
            font-size: 20px;
            height: 20px;
            width: 20px;
        }
    }

    .hint {
    }

    ng-message,
    data-ng-message,
    x-ng-message,
    [ng-message],
    [data-ng-message],
    [x-ng-message],
    [ng-message-exp],
    [data-ng-message-exp],
    [x-ng-message-exp] {
    }
}

md-radiobutton-container {
    md-radio-group {
        display: block;
        margin-top: 2px;
        padding-bottom: 1px;
    }

    md-radio-group md-radio-button {
        display: inline-block;
        margin-top: 0;
        margin-bottom: 0;

        &:not(:first-child) {
            margin-top: 0;
        }

        .md-container {
            margin-top: -1px;
            margin-left: 2px;
        }

        .md-label {
            line-height: 15px;
            margin-left: 27px;
            margin-top: 6px;
            margin-right: 6px;// Should 10px as specified in visual guide, but.. decreased on 4px in order to remove spacing between inline block elements
            margin-bottom: 7px;
        }

        &:last-child {
            .md-label {
                margin-right: 10px;
            }
        }
    }

    &[md-stacked] {
        md-radio-group {
            padding-bottom: 0;
        }

        md-radio-group md-radio-button {
            display: block;

            .md-label {
                margin-right: 10px;
            }

            &:first-child {
                &:last-child {
                }
            }

            &:not(:first-child) {
            }
        }

        .hint {
            padding-top: 0;
            line-height: 24px;
            top: 1px;
        }
    }
}

md-checkbox-container {

    md-checkbox {
        display: inline-block;
        margin-top: 2px;
        margin-right: 0;
        margin-bottom: 0;

        .md-container {
            margin-top: -1px;
            margin-left: 2px;
        }

        .md-label {
            line-height: 15px;
            margin-left: 27px;
            margin-top: 6px;
            margin-right: 6px;// Should 10px as specified in visual guide, but.. decreased on 4px in order to remove spacing between inline block elements
            margin-bottom: 7px;
        }

        &:last-of-type {
            .md-label {
                margin-right: 10px;
            }
        }
    }

    .hint {
        padding-top: 6px;
    }

    &[md-stacked] {

        md-checkbox {
            display: block;
            margin-top: 0;

            .md-label {
                margin-right: 10px;
            }

            &:first-of-type {
                margin-top: 2px;
            }

            &:last-of-type {
            }
        }

        .hint {
            padding-top: 0;
            line-height: 24px;
            top: 1px;
        }
    }

}
